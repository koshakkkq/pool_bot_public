import asyncio
import logging

from aiogram.dispatcher.storage import FSMContext
from aiogram import types, Dispatcher
from shop.photos import photos
from shop.stickers import stickers
import shop.keyboards.greeting as keyboards
from create import bot
async def first_msg_menu(message: types.Message, state:FSMContext):
	await state.reset_data()

	#res = await message.answer_sticker(sticker=stickers["first_msg"], disable_notification=True)
	#await state.update_data(delete_msg=res.message_id)
	await asyncio.sleep(0.02)
	await message.answer_photo(photo=photos["greeting_menu"], caption=f'–î–æ–±—Ä—ã–π –¥–µ–Ω—å "{message.from_user.first_name}" ‚òÄ\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ú–∞–≥–∞–∑–∏–Ω –±–∞—Å—Å–µ–π–Ω–æ–≤ ‚Ññ1.\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º. üëáüèº',
						 reply_markup=keyboards.menu_keyboard)


async def about(callback: types.CallbackQuery, state: FSMContext):
	data = await state.get_data()
	if data.get('delete_msg', None) is not None:
		try:
			await bot.delete_message(callback.message.chat.id, data.get('delete_msg'))
		except Exception as e:
			logging.error(e)
	await callback.message.delete()
	await callback.message.answer_photo(photo=photos["about"], caption='–ú–∞–≥–∞–∑–∏–Ω –±–∞—Å—Å–µ–π–Ω–æ–≤ No1 –±–æ–ª–µ–µ 10 –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ, –º–æ–Ω—Ç–∞–∂–∞ –∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–∞—Å—Å–µ–π–Ω–æ–≤ –≤ –†–æ—Å—Ç–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.\n–í –Ω–∞—à–∏—Ö —Å–∏–ª–∞—Ö –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –ª—é–±–æ–π –±–∞—Å—Å–µ–π–Ω –æ—Ç –Ω–µ–±–æ–ª—å—à–∏—Ö —á–∞—Å—Ç–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö, –¥–æ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–∞—Å—Å–µ–π–Ω–æ–≤.\n\n–ù–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äì —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —Ä–∞–±–æ—Ç—ã. –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–æ–±–ª—é–¥–∞—é—Ç –≤—Å–µ —Å—Ä–æ–∫–∏, –∑–∞—Ä–∞–Ω–µ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º. –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞—à–µ–º—É –æ–ø—ã—Ç—É –º—ã –∑–Ω–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞—Å—Å–µ–π–Ω–∞ –í–∞—à–µ–π –º–µ—á—Ç—ã!',
										reply_markup=keyboards.about_keyboard)
	await callback.answer()


async def about_msg(message: types.Message, state:FSMContext):

	await state.reset_data()
	await message.answer_photo(photo=photos["about"],
										caption='–ú–∞–≥–∞–∑–∏–Ω –±–∞—Å—Å–µ–π–Ω–æ–≤ No1 –±–æ–ª–µ–µ 10 –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ, –º–æ–Ω—Ç–∞–∂–∞ –∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –±–∞—Å—Å–µ–π–Ω–æ–≤ –≤ –†–æ—Å—Ç–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.\n–í –Ω–∞—à–∏—Ö —Å–∏–ª–∞—Ö –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –ª—é–±–æ–π –±–∞—Å—Å–µ–π–Ω –æ—Ç –Ω–µ–±–æ–ª—å—à–∏—Ö —á–∞—Å—Ç–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö, –¥–æ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –±–∞—Å—Å–µ–π–Ω–æ–≤.\n\n–ù–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äì —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —Ä–∞–±–æ—Ç—ã. –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–æ–±–ª—é–¥–∞—é—Ç –≤—Å–µ —Å—Ä–æ–∫–∏, –∑–∞—Ä–∞–Ω–µ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º. –ë–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞—à–µ–º—É –æ–ø—ã—Ç—É –º—ã –∑–Ω–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞—Å—Å–µ–π–Ω–∞ –í–∞—à–µ–π –º–µ—á—Ç—ã!',
										reply_markup=keyboards.about_keyboard)


async def client_menu(callback: types.CallbackQuery, state: FSMContext):
	await state.reset_data()

	#res = await callback.message.answer_sticker(sticker=stickers["main_menu"], disable_notification=True)
	#await state.update_data(delete_msg=res.message_id)

	await asyncio.sleep(0.02)

	await callback.message.delete()
	await callback.message.answer(text='‚òÄ–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ú–∞–≥–∞–∑–∏–Ω–∞ –±–∞—Å—Å–µ–π–Ω–æ–≤ ‚Ññ1.\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèº',
								  reply_markup=keyboards.menu_keyboard)
	await callback.answer()

async def menu_msg(message: types.Message, state:FSMContext):
	await state.reset_data()

	#res = await message.answer_sticker(sticker=stickers["main_menu"], disable_notification=True)
	#await state.update_data(delete_msg=res.message_id)
	await asyncio.sleep(0.02)
	await message.answer(
		text='‚òÄ–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ú–∞–≥–∞–∑–∏–Ω–∞ –±–∞—Å—Å–µ–π–Ω–æ–≤ ‚Ññ1.\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèº',
		reply_markup=keyboards.menu_keyboard)

async def reviews(callback: types.CallbackQuery, state: FSMContext):
	data = await state.get_data()
	if data.get('delete_msg', None) is not None:
		try:
			await bot.delete_message(callback.message.chat.id, data.get('delete_msg'))
		except Exception as e:
			logging.error(e)
	await callback.message.delete()
	await state.reset_data()
	await callback.message.answer(text='‚ù§–ü–æ—á–∏—Ç–∞—Ç—å –Ω–∞—à–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ',
								  reply_markup=keyboards.reviews_keyboard)
	await callback.answer()


async def reviews_msg(message: types.Message, state: FSMContext):
	await message.answer(text='‚ù§–ü–æ—á–∏—Ç–∞—Ç—å –Ω–∞—à–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ',
								  reply_markup=keyboards.reviews_keyboard)


def register_handlers(dp: Dispatcher):
	dp.register_callback_query_handler(about, state='*', text='shop_about')
	dp.register_callback_query_handler(client_menu, state='*', text = 'shop_main_menu')
	dp.register_callback_query_handler(reviews, state = "*", text = 'shop_reviews')
